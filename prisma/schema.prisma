// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId //Mongo default id is _id
  email     String   @unique
  image     String?
  emailVerified DateTime? 
  name      String
  recipes   Recipe[] // One-to-many relation with Recipes, this does not create a foreign key in MongoDB (Prisma way to handle relations)
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId //Mongo default id is _id
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Ingredient {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  quantity  String
  recipe    Recipe? @relation(fields: [recipeId], references: [id])
  recipeId  String?  @db.ObjectId
}

model Recipe {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId //Mongo default id is _id
  title     String
  ingredients Ingredient[] 
  description String?
  favorite  Boolean @default(false)
  user      User?    @relation(fields: [userId], references: [id]) //virtial prisma relation
  userId    String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
